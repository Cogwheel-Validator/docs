---
title: "Usefull commands for {{ network.name }}"
description: "Usefull commands for {{ network.name }}"
---

# Usefull commands for {{ network.name }}

## üîë Key management

<Callout type="info" text={`Change wallet in the commands to your own wallet name.`} />

#### Add new key

```bash
{{ network.binary_name }} keys add wallet
```

#### Recover existing key

```bash
{{ network.binary_name }} keys add wallet --recover
```

#### List all keys

```bash
{{ network.binary_name }} keys list
```

#### Delete key

```bash
{{ network.binary_name }} keys delete wallet
```

#### Export key to the file

```bash
{{ network.binary_name }} keys export wallet
```

#### Import key from the file

```bash
{{ network.binary_name }} keys import wallet wallet.backup
```

#### Query wallet balance

```bash
{{ network.binary_name }} q bank balances $( {{ network.binary_name }} keys show wallet -a)
```

## üßô Validator management

<Callout type="info" text={`Make sure to change values for moniker, identity, details website to your own values.`} />

#### Edit existing validator

When editing a validator, you can use the following command. But you do not need to edit all the fields. 
You can edit only the fields you want to change. The gas flags are required for the command to work.
```bash
{{ network.binary_name }} tx staking edit-validator \
--new-monike "YOUR_MONIKER_NAME" \
--identity "YOUR_KEYBASE_ID" \
--details "YOUR_DETAILS" \
--website "YOUR_WEBSITE_URL" \
--chain-id {{ network.chain_id }} \
--commission-rate "0.05" \
--gas-adjustment 1.5 \
--gas auto \
--gas-prices "{{ network.minimum_gas_prices }}" \
--from wallet
```

```bash
{{ network.binary_name }} tx staking edit-validator /path/to/validator.json --gas-adjustment 1.5 --gas auto
 --gas-prices {{ network.minimum_gas_prices }} -y
```

#### Unjail validator

```bash
{{ network.binary_name }} tx slashing unjail --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto
 --gas-prices {{ network.minimum_gas_prices }} -y
```

#### Jail reason

```bash
{% if network.cosmos_sdk_version < 0.48 %}
```bash
{{ network.binary_name }} query slashing signing-info $( {{ network.binary_name }} tendermint show-validator)
```
{% else %}
```bash
{{ network.binary_name }} query slashing signing-info $( {{ network.binary_name }} comet show-validator)
```
{% endif %}

#### List all active validators

```bash
{{ network.binary_name }} q staking validators -oj --limit=3000 | jq '.validators[] | select(.status=="BOND_STATUS_BONDED")' | jq -r '(.tokens|tonumber/pow(10; 6)|floor|tostring) + " \t " + .description.moniker' | sort -gr | nl
```

#### List all inactive validators

```bash
{{ network.binary_name }} q staking validators -oj --limit=3000 | jq '.validators[] | select(.status=="BOND_STATUS_UNBONDED")' | jq -r '(.tokens|tonumber/pow(10; 6)|floor|tostring) + " \t " + .description.moniker' | sort -gr | nl
```

#### View validator details

```bash
{{ network.binary_name }} q staking validator $( {{ network.binary_name }} keys show wallet --bech val -a)
```

## ü™ô Token management

#### Withdraw rewards from all validators

```bash
{{ network.binary_name }} tx distribution withdraw-all-rewards --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto --gas-prices {{ network.minimum_gas_prices }} -y
```

#### Withdraw commission and rewards from your validator

```bash
{{ network.binary_name }} tx distribution withdraw-rewards $( {{ network.binary_name }} keys show wallet --bech val -a) --commission --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto --gas-prices {{ network.minimum_gas_prices }} -y
```

#### Delegate tokens to yourself

```bash
{{ network.binary_name }} tx staking delegate $( {{ network.binary_name }} keys show wallet --bech val -a) 100000000000{{ network.minimum_gas_prices }} --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto --gas-prices {{ network.minimum_gas_prices }} -y
```

#### Delegate tokens to validator

```bash
{{ network.binary_name }} tx staking delegate <TO_VALOPER_ADDRESS> 100000000000{{ network.minimum_gas_prices }} --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto --gas-prices {{ network.minimum_gas_prices }}  -y
```

#### Redelegate tokens to another validator

```bash
{{ network.binary_name }} tx staking redelegate $( {{ network.binary_name }} keys show wallet --bech val -a) <TO_VALOPER_ADDRESS> 1000000$ublit --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto --gas-prices {{ network.minimum_gas_prices }} -y
```

#### Unbond tokens from your validator

```bash
{{ network.binary_name }} tx staking unbond $( {{ network.binary_name }} keys show wallet --bech val -a) 1000000$ublit --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto --gas-prices {{ network.minimum_gas_prices }} -y
```

#### Send tokens to the wallet

```bash
{{ network.binary_name }} tx bank send wallet <TO_WALLET_ADDRESS> 1000000$ublit --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto --gas-prices {{ network.minimum_gas_prices }} -y
```

## üèõÔ∏è Governance

#### List all proposals

```bash
{{ network.binary_name }} query gov proposals
```

#### View proposal by id

```bash
{{ network.binary_name }} query gov proposal 1
```

#### Vote 'Yes'

```bash
{{ network.binary_name }} tx gov vote 1 yes --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto --gas-prices {{ network.minimum_gas_prices }} -y
```

#### Vote 'No'

```bash
{{ network.binary_name }} tx gov vote 1 no --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto --gas-prices {{ network.minimum_gas_prices }} -y
```

#### Vote 'Abstain'

```bash
{{ network.binary_name }} tx gov vote 1 abstain --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto --gas-prices {{ network.minimum_gas_prices }} -y
```

#### Vote 'NoWithVeto'

```bash
{{ network.binary_name }} tx gov vote 1 NoWithVeto --from wallet --chain-id {{ network.chain_id }} --gas-adjustment 1.5 --gas auto --gas-prices {{ network.minimum_gas_prices }} -y
```

## ‚ö°Ô∏è Utility

#### Update Indexer

**Disable indexer**

```bash
sed -i -e 's|^indexer *=.*|indexer = "null"|' $HOME/.{{ network.home_dir }}/config/config.toml
```

**Enable indexer**

```bash
sed -i -e 's|^indexer *=.*|indexer = "kv"|' $HOME/.{{ network.home_dir }}/config/config.toml
```

#### Update pruning

```bash
sed -i \
  -e 's|^pruning *=.*|pruning = "custom"|' \
  -e 's|^pruning-keep-recent *=.*|pruning-keep-recent = "2000"|' \
  -e 's|^pruning-interval *=.*|pruning-interval = "100"|' \
  $HOME/.{{ network.home_dir }}/config/app.toml
```

## üîß Maintenance

#### Get validator info

```bash
{{ network.binary_name }} status 2>&1 | jq .ValidatorInfo
```

#### Get sync info

```bash
{{ network.binary_name }} status 2>&1 | jq .SyncInfo
```

#### Enable prometheus

```bash
sed -i -e "s/prometheus = false/prometheus = true/" $HOME/.blit/config/config.toml
```

#### Reset chain data

```bash
{{ network.binary_name }} tendermint unsafe-reset-all --keep-addr-book --home $HOME/.blit --keep-addr-book
```

#### Remove node



<Callout type="error" emoji="‚ò¢Ô∏è">
  Make sure you have backed up your priv_validator_key.json!
</Callout>

```bash
cd $HOME
sudo systemctl stop {{ network.binary_name }}
sudo systemctl disable {{ network.binary_name }}
sudo rm /etc/systemd/system/{{ network.binary_name }}.service
sudo systemctl daemon-reload
rm -f $(which {{ network.binary_name }})
rm -rf $HOME/.blit
rm -rf $HOME/blitchain
```

## ‚öôÔ∏è Service Management

#### Reload service configuration

```bash
sudo systemctl daemon-reload
```

#### Enable service

```bash
sudo systemctl enable {{ network.binary_name }}
```

#### Disable service

```bash
sudo systemctl disable {{ network.binary_name }}
```

#### Start service

```bash
sudo systemctl start {{ network.binary_name }}
```

#### Stop service

```bash
sudo systemctl stop {{ network.binary_name }}
```

#### Restart service

```bash
sudo systemctl restart {{ network.binary_name }}
```

#### Check service status

```bash
sudo systemctl status {{ network.binary_name }}
```

#### Check service logs

```bash
sudo journalctl -u {{ network.binary_name }} -f --no-hostname -o cat
```